import wximport wx.auiimport wx.gridclass MainFrame (wx.Frame):        def __init__(self, parent):        wx.Frame.__init__ (self, parent, id = wx.ID_ANY, title = wx.EmptyString, pos = wx.DefaultPosition, size = wx.Size(500,300), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL)                self.SetSizeHints(wx.DefaultSize, wx.DefaultSize)                self.menu = wx.MenuBar(0)        self.menu_schem = wx.Menu()        self.item_save = wx.MenuItem(self.menu_schem, wx.ID_ANY, u"Save", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_schem.Append(self.item_save)                self.item_save_as = wx.MenuItem(self.menu_schem, wx.ID_ANY, u"Save As", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_schem.Append(self.item_save_as)                self.item_open = wx.MenuItem(self.menu_schem, wx.ID_ANY, u"Open", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_schem.Append(self.item_open)                self.item_new = wx.MenuItem(self.menu_schem, wx.ID_ANY, u"New", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_schem.Append(self.item_new)                self.menu.Append(self.menu_schem, u"Schematic")                 self.menu_editor = wx.Menu()        self.item_gen_netlist = wx.MenuItem(self.menu_editor, wx.ID_ANY, u"Generate Netlist for Active Schematic", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_editor.Append(self.item_gen_netlist)                self.item_save_script = wx.MenuItem(self.menu_editor, wx.ID_ANY, u"Save Script", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_editor.Append(self.item_save_script)                self.item_open_script = wx.MenuItem(self.menu_editor, wx.ID_ANY, u"Open Script", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_editor.Append(self.item_open_script)                self.item_new_script = wx.MenuItem(self.menu_editor, wx.ID_ANY, u"New Script", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_editor.Append(self.item_new_script)                self.menu.Append(self.menu_editor, u"Editor")                 self.menu_run = wx.Menu()        self.item_setup = wx.MenuItem(self.menu_run, wx.ID_ANY, u"Simulation Setup", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_run.Append(self.item_setup)                self.item_run = wx.MenuItem(self.menu_run, wx.ID_ANY, u"Run Schematic", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_run.Append(self.item_run)        self.item_run_qss = wx.MenuItem(self.menu_run, wx.ID_ANY, u"Run Schematic (QSS)", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_run.Append(self.item_run_qss)                self.item_run_script = wx.MenuItem(self.menu_run, wx.ID_ANY, u"Run Script", wx.EmptyString, wx.ITEM_NORMAL)        self.menu_run.Append(self.item_run_script)                self.menu.Append(self.menu_run, u"Run")                 self.SetMenuBar(self.menu)                self.statusbar = self.CreateStatusBar(2)        szr_master = wx.BoxSizer(wx.VERTICAL)                self.spl_one = wx.SplitterWindow(self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.SP_3D|wx.SP_LIVE_UPDATE|wx.SP_PERMIT_UNSPLIT)        self.spl_one.Bind(wx.EVT_IDLE, self.spl_oneOnIdle)                self.pnl_left = wx.Panel(self.spl_one, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL)        szr_left = wx.BoxSizer(wx.VERTICAL)                self.ntb_left = wx.aui.AuiNotebook(self.pnl_left, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.aui.AUI_NB_TAB_MOVE|wx.aui.AUI_NB_TAB_SPLIT)                szr_left.Add(self.ntb_left, 1, wx.EXPAND, 5)                self.pnl_left.SetSizer(szr_left)        self.pnl_left.Layout()        szr_left.Fit(self.pnl_left)        self.m_panel8 = wx.Panel(self.spl_one, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL)        szr_main = wx.BoxSizer(wx.VERTICAL)                self.spt_main = wx.SplitterWindow(self.m_panel8, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.SP_3DSASH|wx.SP_LIVE_UPDATE|wx.SP_PERMIT_UNSPLIT)        self.spt_main.SetSashGravity(1)        self.spt_main.Bind(wx.EVT_IDLE, self.spt_mainOnIdle)                self.pnl_top = wx.Panel(self.spt_main, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL)        szr_top = wx.BoxSizer(wx.VERTICAL)                self.ntb_editor = wx.aui.AuiNotebook(self.pnl_top, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.aui.AUI_NB_DEFAULT_STYLE)                szr_top.Add(self.ntb_editor, 1, wx.EXPAND, 5)                self.pnl_top.SetSizer(szr_top)        self.pnl_top.Layout()        szr_top.Fit(self.pnl_top)        self.pnl_bottom = wx.Panel(self.spt_main, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL)        szr_bottom = wx.BoxSizer(wx.VERTICAL)                self.ntb_bottom = wx.aui.AuiNotebook(self.pnl_bottom, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.aui.AUI_NB_TAB_MOVE|wx.aui.AUI_NB_TAB_SPLIT)                szr_bottom.Add(self.ntb_bottom, 1, wx.EXPAND, 5)                self.pnl_bottom.SetSizer(szr_bottom)        self.pnl_bottom.Layout()        szr_bottom.Fit(self.pnl_bottom)        self.spt_main.SplitHorizontally(self.pnl_top, self.pnl_bottom, -150)        szr_main.Add(self.spt_main, 1, wx.EXPAND, 5)                self.m_panel8.SetSizer(szr_main)        self.m_panel8.Layout()        szr_main.Fit(self.m_panel8)        self.spl_one.SplitVertically(self.pnl_left, self.m_panel8, 200)        szr_master.Add(self.spl_one, 1, wx.EXPAND, 5)                self.SetSizer(szr_master)        self.Layout()                self.Centre(wx.BOTH)                # Connect Events        self.Bind(wx.EVT_MENU, self.on_save,        id=self.item_save.GetId())        self.Bind(wx.EVT_MENU, self.on_save_as,     id=self.item_save_as.GetId())        self.Bind(wx.EVT_MENU, self.on_open,        id=self.item_open.GetId())        self.Bind(wx.EVT_MENU, self.on_new_schem,   id=self.item_new.GetId())        self.Bind(wx.EVT_MENU, self.on_gen_netlist, id=self.item_gen_netlist.GetId())        self.Bind(wx.EVT_MENU, self.on_setup,       id=self.item_setup.GetId())        self.Bind(wx.EVT_MENU, self.on_run,         id=self.item_run.GetId())        self.Bind(wx.EVT_MENU, self.on_run_qss,     id=self.item_run_qss.GetId())        self.Bind(wx.EVT_MENU, self.on_run_script,  id=self.item_run_script.GetId())        self.ntb_editor.Bind(wx.aui.EVT_AUINOTEBOOK_PAGE_CLOSE, self.on_page_close)        def __del__(self):        pass            # Virtual event handlers, overide them in your derived class    def on_save(self, event):        event.Skip()        def on_save_as(self, event):        event.Skip()        def on_open(self, event):        event.Skip()        def on_new_schem(self, event):        event.Skip()        def on_gen_netlist(self, event):        event.Skip()        def on_setup(self, event):        event.Skip()        def on_run(self, event):        event.Skip()        def on_run_script(self, event):        event.Skip()        def on_page_close(self, event):        event.Skip()        def spl_oneOnIdle(self, event):        self.spl_one.SetSashPosition(200)        self.spl_one.Unbind(wx.EVT_IDLE)        def spt_mainOnIdle(self, event):        self.spt_main.SetSashPosition(-150)        self.spt_main.Unbind(wx.EVT_IDLE)    ############################################################################# Class PropertyDialog###########################################################################class PropertyDialog (wx.Dialog):        def __init__(self, parent):        wx.Dialog.__init__ (self, parent, id = wx.ID_ANY, title = u"Properties", pos = wx.DefaultPosition, size = wx.DefaultSize, style = wx.DEFAULT_DIALOG_STYLE)                self.SetSizeHints(wx.DefaultSize, wx.DefaultSize)                szr_main = wx.BoxSizer(wx.VERTICAL)                self.propgrid = wx.grid.Grid(self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, 0)                # Grid        self.propgrid.CreateGrid(0, 1)        self.propgrid.EnableEditing(True)        self.propgrid.EnableGridLines(True)        self.propgrid.EnableDragGridSize(False)        self.propgrid.SetMargins(0, 0)                # Columns        self.propgrid.SetColSize(0, 300)        self.propgrid.EnableDragColMove(False)        self.propgrid.EnableDragColSize(True)        self.propgrid.SetColLabelSize(20)        self.propgrid.SetColLabelValue(0, u"Property")        self.propgrid.SetColLabelValue(1, u"Value")        self.propgrid.SetColLabelAlignment(wx.ALIGN_CENTRE, wx.ALIGN_CENTRE)                # Rows        self.propgrid.EnableDragRowSize(True)        self.propgrid.SetRowLabelSize(200)        self.propgrid.SetRowLabelAlignment(wx.ALIGN_LEFT, wx.ALIGN_CENTRE)                # Label Appearance                # Cell Defaults        self.propgrid.SetDefaultCellAlignment(wx.ALIGN_LEFT, wx.ALIGN_TOP)        szr_main.Add(self.propgrid, 0, 0, 5)                dlg_btns = wx.StdDialogButtonSizer()        self.dlg_btnsOK = wx.Button(self, wx.ID_OK)        dlg_btns.AddButton(self.dlg_btnsOK)        self.dlg_btnsCancel = wx.Button(self, wx.ID_CANCEL)        dlg_btns.AddButton(self.dlg_btnsCancel)        dlg_btns.Realize();        szr_main.Add(dlg_btns, 1, wx.EXPAND, 5)                self.SetSizer(szr_main)        self.Layout()        szr_main.Fit(self); self.szr_main = szr_main                self.Centre(wx.BOTH)                # Connect Events        self.propgrid.Bind(wx.grid.EVT_GRID_CELL_CHANGED, self.on_grid_update)        def __del__(self):        pass            # Virtual event handlers, overide them in your derived class    def on_grid_update(self, event):        event.Skip()    ############################################################################# Class MyFrame2###########################################################################class MyFrame2 (wx.Frame):        def __init__(self, parent):        wx.Frame.__init__ (self, parent, id = wx.ID_ANY, title = wx.EmptyString, pos = wx.DefaultPosition, size = wx.Size(500,300), style = wx.DEFAULT_FRAME_STYLE|wx.TAB_TRAVERSAL)                self.SetSizeHints(wx.DefaultSize, wx.DefaultSize)                bSizer7 = wx.BoxSizer(wx.VERTICAL)                self.m_notebook1 = wx.Notebook(self, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, 0)        self.m_panel5 = wx.Panel(self.m_notebook1, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TAB_TRAVERSAL)        gSizer1 = wx.GridSizer(1, 1, 0, 0)                self.m_treeCtrl2 = wx.TreeCtrl(self.m_panel5, wx.ID_ANY, wx.DefaultPosition, wx.DefaultSize, wx.TR_DEFAULT_STYLE)        gSizer1.Add(self.m_treeCtrl2, 1, wx.ALL|wx.EXPAND, 5)                self.m_panel5.SetSizer(gSizer1)        self.m_panel5.Layout()        gSizer1.Fit(self.m_panel5)        self.m_notebook1.AddPage(self.m_panel5, u"a page", False)                bSizer7.Add(self.m_notebook1, 1, wx.EXPAND |wx.ALL, 5)                self.SetSizer(bSizer7)        self.Layout()                self.Centre(wx.BOTH)        def __del__(self):        pass    